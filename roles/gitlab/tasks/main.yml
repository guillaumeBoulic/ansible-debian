---

- name: Install required packages
  apt:
    name: '{{ item }}'
    state: 'latest'
    install_recommends: False
  with_items:
    - build-essential
    - zlib1g-dev
    - libyaml-dev
    - libssl-dev
    - libgdbm-dev
    - libreadline-dev
    - libncurses5-dev
    - libffi-dev
    - curl
    - openssh-server
    - redis-server
    - checkinstall
    - libxml2-dev
    - libxslt-dev
    - libcurl4-openssl-dev
    - libicu-dev
    - logrotate
    - python-docutils
    - pkg-config
    - cmake
    - ruby2.1
    - redis-server
    - expect
    - sudo
    - bundler

- name: Create GitLab system group
  group:
    name: '{{ gitlab_group }}'
    state: 'present'

- name: Create GitLab user
  user:
    name: '{{ gitlab_user }}'
    group: '{{ gitlab_group }}'
    home: '/home/git'
    comment: 'GitLab'
    append: True
    state: 'present'


- name: Create mysql user git
  mysql_user: name=git password={{ gitlab_mysql_password }} priv=*.*:ALL state=present

- name: Create mysql database
  mysql_db: name=gitlabhq_production state=present 

- name: Disable Redis listening on TCP by setting 'port' to 0
  copy:
    src: 'redis.conf'
    dest: '/etc/redis/redis.conf'
    owner: 'root'
    group: 'root'
    mode: '644'
  notify:
    - restart redis

- name: Clone gitlab
  git: repo=https://gitlab.com/gitlab-org/gitlab-ce.git dest={{ gitlab_home }} clone=yes version=v7.10.1 force=yes
  notify:
    - Restart gitlab

- name: Make sure GitLab has the proper access
  file: path={{ gitlab_home }} owner={{ gitlab_user }} recurse=yes mode='u+rwx,g=rx' state=directory

- name: Configure gitlab.yml
  template:
    src: 'gitlab.yml.j2'
    dest: '{{ gitlab_home + "/config/gitlab.yml" }}'
    owner: '{{ gitlab_user }}'
    group: '{{ gitlab_group }}'
    mode: '0644'
  notify:
    - Restart gitlab

- name: Make sure GitLab has the proper access
  file: path={{ item }} owner={{ gitlab_user }} recurse=yes mode='u+rwx,g=rx' state=directory
  with_items:
    - '{{ gitlab_home + "/log" }}'
    - '{{ gitlab_home + "/tmp" }}'
    - '/home/git/gitlab-satellites'
    - '{{ gitlab_home + "/tmp/pids" }}'
    - '{{ gitlab_home + "/tmp/sockets" }}'
    - '{{ gitlab_home + "/public/uploads" }}'
  notify:
    - Restart gitlab

- name: Configure unicorn.rb
  copy:
    src: 'unicorn.rb'
    dest: '{{ gitlab_home + "/config/unicorn.rb" }}'
    owner: '{{ gitlab_user }}'
    group: '{{ gitlab_group }}'
    mode: '644'
  notify:
    - Restart gitlab

- name: Copy the example Rack attack config and Configure Redis connection settings
  command: "{{ item }}"
  with_items:
    - '{{ "cp " + gitlab_home + "/config/resque.yml.example " + gitlab_home + "/config/resque.yml" }}'
    - '{{ "cp " + gitlab_home + "/config/initializers/rack_attack.rb.example " + gitlab_home + "/config/initializers/rack_attack.rb" }}'
  notify:
    - Restart gitlab

- name: Make sure GitLab has the proper access
  file: path={{ item }} owner={{ gitlab_user }} group=root mode='754' state=file
  with_items:
    - '{{ gitlab_home + "/config/resque.yml" }}'
    - '{{ gitlab_home + "/config/initializers/rack_attack.rb" }}'

- name: Copy the example Rack attack config and Configure Redis connection settings
  command: "{{ item }}"
  with_items:
    - 'sudo -u git -H git config --global user.name "GitLab"'
    - '{{ "sudo -u git -H git config --global user.email git@git." + fqdn }}'
    - 'sudo -u git -H git config --global core.autocrlf input'
  notify:
    - Restart gitlab

- name: Configure mysql
  template:
    src: 'database.yml.j2'
    dest: '{{ gitlab_home + "/config/database.yml" }}'
    owner: '{{ gitlab_user }}'
    group: '{{ gitlab_group }}'
    mode: '644'

- name: Make config/database.yml readable to git only
  file: path={{ gitlab_home + "/config/database.yml" }} owner={{ gitlab_user }} mode='640'

- name: Install gems for MySQL
  command: sudo -u git -H bundle install --deployment --without development test postgres aws
  notify:
    - Restart gitlab

- name: Install GitLab Shell
  command: sudo -u git -H bundle exec rake gitlab:shell:install[v2.0.1] REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production
  notify:
    - Restart gitlab

- name: Install GitLab Shell
  command: expect -c \"spawn sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production GITLAB_ROOT_PASSWORD={{ gitlab_root_pass }}; expect \\"Do you want to continue (yes/no)?\\"; send \\"yes\\";\"
  notify:
    - Restart gitlab

- name: Install Init Script
  command: "{{ item }}"
  with_items:
    - 'cp lib/support/init.d/gitlab /etc/init.d/gitlab'
    - 'update-rc.d gitlab defaults 21'

- name: Setup Logrotate
  command: cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab

- name: Check Application Status
  command: sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production
  notify:
    - Restart gitlab

- name: Compile Assets
  command: sudo -u git -H bundle exec rake assets:precompile RAILS_ENV=production
  notify:
    - Restart gitlab

- name: Install the Passenger module 
  command: "{{ item }}"
  with_items:
    - 'gem install passenger'
    - 'passenger-install-apache2-module >> /etc/apache2/apache2.conf'
  notify:
    - Restart apache

- name: Setup the vhost
  template:
    src: 'apache.gitlab.j2'
    dest: '/etc/apache2/site-available/gitlab.conf'
    owner: 'root'
    group: 'root'
    mode: '644'
  notify:
    - Restart apache

- name: Setup the vhost
  command: /usr/sbin/a2ensite gitlab
  notify:
    - Restart apache
